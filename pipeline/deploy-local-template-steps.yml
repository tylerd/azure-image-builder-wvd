parameters:
  - name: name
  - name: resourceGroupName
  - name: location
  - name: templateFile
  - name: azureConnectionName
  - name: validate
    type: boolean
  - name: parameterArray
    type: object
    default: []

steps:
  - task: AzureResourceGroupDeployment@2
    name: Deploy_${{ parameters.name }}
    displayName: Deploy Template to ${{ parameters.resourceGroupName }}
    inputs:
      azureSubscription: ${{ parameters.azureConnectionName }}
      resourceGroupName: ${{ parameters.resourceGroupName }}
      location: ${{ parameters.location }}
      templateLocation: Linked artifact
      csmFile: ${{parameters.templateFile}}
      overrideParameters: -${{ join(' -', parameters.parameterArray) }}
      deploymentOutputs: OutputsJson
      ${{ if parameters.validate }}:
        deploymentMode: Validation

  - pwsh: |
      Write-Host $Env:OUTPUT_JSON
      $outputs = $Env:OUTPUT_JSON | ConvertFrom-Json
      $outputs.PSObject.Properties | ForEach-Object {
        if($_.Value.type -eq "String")
        {
          Write-Host "$($_.Name):$($_.Value.value)"
          Write-Host "##vso[task.setvariable variable=$($_.Name);isOutput=true]$($_.Value.value)" 
        } else {
          $valStr = $_.Value.value | ConvertTo-Json -Compress
          Write-Host "$($_.Name):$valStr"
          Write-Host "##vso[task.setvariable variable=$($_.Name);isOutput=true]$valStr" 
        }
        
      }
    name: Output_${{ parameters.name }}
    condition: ${{ not(parameters.validate) }}
    env:
      OUTPUT_JSON: $(OutputsJson)

